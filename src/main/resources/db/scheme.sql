DROP INDEX IF EXISTS users_unique_username_idx;
DROP TABLE IF EXISTS vote;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS menu_item;
DROP TABLE IF EXISTS restaurant;
DROP TABLE IF EXISTS dish;
DROP TABLE IF EXISTS users;
DROP SEQUENCE IF EXISTS global_seq;

CREATE SEQUENCE global_seq
  AS INTEGER
  START WITH 100000;

CREATE TABLE dish (
  id      INTEGER GENERATED BY DEFAULT AS
  SEQUENCE global_seq PRIMARY KEY,
  name    VARCHAR(255)          NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE restaurant (
  id      INTEGER GENERATED BY DEFAULT AS
  SEQUENCE global_seq PRIMARY KEY,
  name    VARCHAR(255)          NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE users (
  id       INTEGER GENERATED BY DEFAULT AS
  SEQUENCE global_seq PRIMARY KEY,
  username VARCHAR_IGNORECASE(255),
  password VARCHAR(60) NOT NULL
);

CREATE UNIQUE INDEX users_unique_username_idx
  ON users (username);

CREATE TABLE user_roles (
  user_id INTEGER      NOT NULL,
  role    VARCHAR(255) NOT NULL,
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

CREATE TABLE vote (
  date          DATE    NOT NULL,
  user_id       INTEGER NOT NULL,
  restaurant_id INTEGER NOT NULL,
  PRIMARY KEY (date, user_id),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurant (id)
    ON DELETE CASCADE
);

CREATE TABLE menu_item (
  id            INTEGER GENERATED BY DEFAULT AS
  SEQUENCE global_seq PRIMARY KEY,
  date          DATE           NOT NULL,
  price         NUMERIC(19, 2) NOT NULL,
  restaurant_id INTEGER        NOT NULL,
  dish_id       INTEGER        NOT NULL,
  FOREIGN KEY (dish_id) REFERENCES dish (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurant (id)
    ON DELETE CASCADE
);

CREATE UNIQUE INDEX menu_item_restaurant_id_dish_id_date_idx
  ON menu_item (dish_id, restaurant_id, date)
